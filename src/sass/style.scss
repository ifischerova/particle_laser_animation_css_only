body {
    background-color: #000;
    min-height: 100vh;
    display: grid;
    place-items: center;
    overflow: hidden;
    perspective: 800px;

    *:not(:empty) {
    transform-style: preserve-3d;
    }
}

.scene {
    position: relative;
    transform: 
        rotateX(-30deg)
        rotateY(30deg);

}

$duration: 10s;

.laser {
    position: absolute;
    inset: -100vh -1px;
    background-color: coral;
    box-shadow: 
        0 0 5px red,
        0 0 10px red,
        0 0 15px red,
        0 0 25px red,
        0 0 40px red;
    transform-origin: top;
    animation: 
        laser $duration infinite linear,
        laserScale $duration infinite step-end;
        
    @keyframes laser {
        0% { opacity: 0; translate: 0 0 -120px; }
        10% { opacity: 1;  translate: 0 0 -120px;}
        70% { opacity: 1;  translate: 0 0 120px;}
        80%, 100% { opacity: 0;  translate: 0 0 120px;}
    }

    @keyframes laserScale {
        0%, 60% {scale: 1;}
        25%, 55% { scale: 0.5 ; animation-timing-function:  ease-in-out;}
    }
}

.panel {
    position: absolute;
    width: 300vh;
    height: 120px;
    background: white;
    top: -60px;
    left: -120px;
    rotate: x 90deg;
    animation: panel $duration infinite ease-in-out;

    @keyframes panel {
        0%, 55%, 100% {translate: 120px;}
        10% {translate: 0px; animation-timing-function: step-end;}  
    }
}

.sparks {
    position: absolute;

    i {
        position: absolute;
        inset: -16px;
        background-color: hsl(var(--hue) 100% 50%);
        transform: translateZ(var(--tz));
        animation: spark $duration var(--delay) infinite ease-out backwards;

        @keyframes spark {
            0%, 25% { opacity: 1; transform: translate3d(0, 0, var(--tz)) rotateX(0) rotateY(0) scale(0); }
            30%, 100% { opacity: 0; transform: translate3d(var(--tx), var(--ty), var(--tz)) rotateX(var(--rx)) rotateY(var(--ry)) scale(1); }
        }

        @for $i from 1 through 120 { 
            &:nth-child(#{$i}) {
                --tz: #{$i - 60}px;
                --delay: #{$duration * 0.3 / 120 * $i};
                --tx: #{random(120) - 60}px;
                --ty: #{random(120) - 180}px;
                --rx: #{random(360) - 180}deg;
                --ry: #{random(360) - 180}deg;
                --hue: #{random(50) - 10};
            }
        }
    }
}

.drop {
    position: absolute;
    width: 120px;
    height: 120px;
    background: white ;
    top: -60px;
    left: -120px;
    rotate: x 90deg;
    animation: drop $duration infinite step-end;
    
    @keyframes drop {
        0%, 100%{ translate: 0 150vh;}
        55% { translate: 0 0; animation-timing-function: ease-in; }
    }
}
